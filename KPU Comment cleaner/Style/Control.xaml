<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:mwt ="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                    xmlns:dependency="clr-namespace:KPU_Comment_cleaner.Dependency"
                    xmlns:control="clr-namespace:KPU_Comment_cleaner.Control"
                    xmlns:component="clr-namespace:KPU_Comment_cleaner.Control.Component"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
                    xmlns:rti="clr-n
amespace:RTI"
                    xmlns:local="clr-namespace:KPU_Comment_cleaner.Style">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Color.xaml" />
        <ResourceDictionary Source="Font.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="Button">
        <Setter Property="Padding" Value="20 2" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{StaticResource DisableBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter 
                            x:Name="contentPresenter" 
                            ContentTemplate="{TemplateBinding ContentTemplate}" 
                            Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisableBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{StaticResource ActiveBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="{StaticResource Highlight}"
                                            Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                            FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BorderRadiusButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{StaticResource LightBackgroundBrush}" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="3"
                            Background="{TemplateBinding Background}"
                            Padding="10 2">
                        <ContentPresenter 
                            x:Name="contentPresenter" 
                            ContentTemplate="{TemplateBinding ContentTemplate}" 
                            Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisableBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="{StaticResource Highlight}"
                                            Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                            FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TransparentButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisableBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="{StaticResource Highlight}"
                                            Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                            FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SystemButton" TargetType="{x:Type control:IconButton}">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="rectangle"
                                SnapsToDevicePixels="True"
                                Background="White"
                                CornerRadius="3"
                                Opacity="0.2"
                                Height="{TemplateBinding Height}"
                                Width="{TemplateBinding Width}"/>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1" Duration="0:0:0.3" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Opacity" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="0.2" Duration="0:0:0.3" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Opacity" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Margin" Value="-14 0 0 0" />
        <Setter Property="MinWidth" Value="{Binding Width, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="Transparent">

                        <Border Padding="0 4">
                            <Track x:Name="PART_Track"
                               IsDirectionReversed="true"
                               IsEnabled="{TemplateBinding IsMouseOver}"
                               Width="6"
                               HorizontalAlignment="Center">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageUpCommand}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageDownCommand}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumb}" />
                                </Track.Thumb>
                            </Track>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Height" Value="14"/>
                <Setter Property="MinHeight" Value="{Binding Height, RelativeSource={RelativeSource Self}}"/>
                <Setter Property="Margin" Value="0 -14 0 0" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Track x:Name="PART_Track"
                                    IsEnabled="{TemplateBinding IsMouseOver}"
                                    Height="6"
                                       >
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageRightCommand}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}" />
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Height" Value="26" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
                            <ToggleButton.Template>
                                <ControlTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="25" />
                                        </Grid.ColumnDefinitions>

                                        <!--화살표 버튼-->
                                        <!--BorderThickness="2"-->
                                        <Border x:Name="Border"  
                                                Grid.ColumnSpan="2" 
                                                Background="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox}}"
                                                BorderThickness="0" />

                                        <!--선택영역-->
                                        <!--Margin="2"-->
                                        <Border Grid.Column="0" 
                                                Background="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox}}"
                                                BorderThickness="0"/>

                                        <!--화살표-->
                                        <Path x:Name="Arrow" 
                                              Grid.Column="1"
                                              HorizontalAlignment="Center" 
                                              Fill="Gray"
                                              VerticalAlignment="Center" 
                                              Data="M 0 0 L 4 6 L 8 0 Z">
                                        </Path>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ToggleButton.IsMouseOver" 
                                                     Value="true">
                                            <Setter TargetName="Border" 
                                                        Property="BorderBrush" 
                                                        Value="White" />
                                        </Trigger>
                                        <Trigger Property="ToggleButton.IsChecked" 
                                                     Value="true">
                                            <Setter TargetName="Border" 
                                                        Property="BorderBrush" 
                                                        Value="White" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" 
                                              IsHitTestVisible="False"  
                                              Content="{TemplateBinding SelectionBoxItem}" 
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              VerticalAlignment="Center"
                                              Margin="10 0 0 0"/>
                        <TextBox x:Name="PART_EditableTextBox" 
                                     Visibility="Hidden" 
                                     IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup" 
                                   Placement="Bottom" 
                                   IsOpen="{TemplateBinding IsDropDownOpen}" 
                                   AllowsTransparency="True" 
                                   Focusable="False" 
                                   PopupAnimation="Slide">
                            <!--BorderThickness="2 0 2 2"-->
                            <Border BorderBrush="#858585"
                                    MinWidth="{TemplateBinding ActualWidth}" 
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Grid Name="DropDown" 
                                      SnapsToDevicePixels="True">
                                    <Border x:Name="DropDownBorder" 
                                            Background="#2b2b2b"/>
                                    <ScrollViewer SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" />
                                    </ScrollViewer>
                                </Grid>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisableBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border"
                                Padding="10 4 5 4">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="#404040" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="ShowInTaskbar" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}" >
                    <Border Padding="0">
                        <Grid>
                            <!-- Window border and dropshadown -->
                            <Border Background="{StaticResource DefaultBackgroundBrush}">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="0" Opacity="0.2" />
                                </Border.Effect>
                            </Border>

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Border x:Name="Caption" Grid.Row="0" Padding="5" Background="{StaticResource DefaultBackgroundBrush}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <control:IconButton Grid.Column="2"
                                                          Style="{StaticResource SystemButton}"
                                                          HoverBackground="{StaticResource LightBackgroundBrush}"
                                                          Icon="/Image/close.png">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <ei:CallMethodAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" MethodName="Close" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </control:IconButton>
                                    </Grid>
                                </Border>

                                <Grid Grid.Row="1">
                                    <ContentPresenter Content="{TemplateBinding Content}" />
                                </Grid>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox" >
        <Setter Property="BorderThickness" Value="0 0 0 1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="CaretBrush" Value="White" />
        <Setter Property="Padding" Value="10 5 10 5" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <Setter Property="Control.Template" >
            <Setter.Value>
                <ControlTemplate TargetType="TextBox" >
                    <!-- Template derived from Default TextBoxBase. -->
                    <!-- Added the Label InternalWatermarkLabel together with the surrounding Grid. -->
                    <Grid>
                        <!--Background="{TemplateBinding Panel.Background}"-->
                        <Border Background="{TemplateBinding Panel.Background}"
                                BorderBrush="{TemplateBinding Border.BorderBrush}"
                                BorderThickness="{TemplateBinding Border.BorderThickness}">
                            <Grid>
                                <mwt:ListBoxChrome Name="Bd"
                                                   BorderThickness="0"
                                                   RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" 
                                                   RenderFocused="{TemplateBinding UIElement.IsKeyboardFocusWithin}" 
                                                   SnapsToDevicePixels="True">
                                    <mwt:ListBoxChrome.OpacityMask>
                                        <VisualBrush>
                                            <VisualBrush.Visual>
                                                <Border SnapsToDevicePixels="True"
                                                Background="Green"
                                                Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType=Border}}"
                                                Height="{Binding ActualHeight, RelativeSource={RelativeSource FindAncestor,AncestorType=Border}}"/>
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </mwt:ListBoxChrome.OpacityMask>
                                    <ScrollViewer Name="PART_ContentHost"
                                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                                  />
                                </mwt:ListBoxChrome>

                                <Label x:Name="InternalWatermarkLabel" 
                                       Content="{TemplateBinding Tag}" 
                                       Visibility="Collapsed" Focusable="False"
                                       Foreground="Gray"
                                       Background="Transparent"
                                       VerticalAlignment="Center"
                                       Padding="{TemplateBinding Padding}" />
                            </Grid>

                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- The multitrigger is responsible for showing and hiding the watermark. -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False" />
                                <Condition Property="Text" Value="" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Visibility" TargetName="InternalWatermarkLabel" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <!-- This trigger mimics the default behavior. -->
                        <Trigger Property="UIElement.IsEnabled" Value="False" >
                            <Setter Property="Panel.Background" TargetName="Bd"
                                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="TextElement.Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="CaretBrush" Value="White" />
        <Setter Property="BorderThickness" Value="0 0 0 1" />
        <Setter Property="Padding" Value="10 5 10 5" />
        <Setter Property="dependency:PasswordBoxMonitor.IsMonitoring" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="true">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <TextBlock Text="{TemplateBinding Tag}" 
                                       Margin="4 2 0 0"
                                       Foreground="Gray" 
                                       Visibility="Collapsed"
                                       Name="txtPrompt" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                         Value="false">
                            <Setter TargetName="Bd"
                                            Property="Background"
                                            Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False" />
                                <Condition Property="dependency:PasswordBoxMonitor.PasswordLength" Value="0" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Visibility" TargetName="txtPrompt" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TabTitle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource MainTextBrush}" />
        <Setter Property="FontSize" Value="21" />
    </Style>
    <Style x:Key="TabDesc" TargetType="TextBlock">
        <Setter Property="Text" Value="made by boyism80@gmail.com" />
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Foreground" Value="{StaticResource DisableBrush}" />
    </Style>

    <Style x:Key="OperationButton" TargetType="Button" BasedOn="{StaticResource TransparentButton}">
        <Setter Property="Width" Value="80" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Margin" Value="10 0 0 0" />
    </Style>

    <Style x:Key="NewsTypeComboBox" TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Margin" Value="10 0 0 0" />
    </Style>

    <Style x:Key="OptionContainer" TargetType="StackPanel">
        <Setter Property="Margin" Value="10 0 0 50" />
        <Setter Property="Orientation" Value="Vertical" />
    </Style>
    <Style x:Key="StatusContainer" TargetType="UniformGrid">
        <Setter Property="Margin" Value="10 0 0 50" />
        <Setter Property="Columns" Value="2" />
    </Style>

    <Style x:Key="GroupTitle" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource MainTextBrush}" />
        <Setter Property="Margin" Value="0 0 0 10" />
    </Style>

    <Style x:Key="OptionComponent" TargetType="{x:Type component:OptionComponent}">
        <Setter Property="Margin" Value="0 0 0 10" />
    </Style>

    <Style x:Key="StatusComponentTitle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource MainTextBrush}" />
    </Style>
    <Style x:Key="StatusComponentValue" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource MainTextBrush}" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Margin" Value="0 0 0 10" />
    </Style>

    <Style x:Key="ContainerWrapper" TargetType="Border">
        <Setter Property="Margin" Value="40 20 0 0" />
    </Style>
    <Style x:Key="ContainerHeader" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource MainTextBrush}" />
        <Setter Property="Padding" Value="10 0 0 10" />
    </Style>


    <Style TargetType="{x:Type DatePicker}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DatePicker">
                    <Grid x:Name="PART_Root">
                        <TextBox x:Name="PART_TextBox" 
                                 Visibility="Collapsed"
                                 Text="{Binding Path=SelectedDate, RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}, StringFormat={}{0:yyyy-MM-dd}}" />

                        <Button x:Name="PART_Button"
                                Style="{StaticResource BorderRadiusButton}"
                                Content="{Binding Path=Text, ElementName=PART_TextBox}" />
                        <Popup x:Name="PART_Popup" StaysOpen="False" AllowsTransparency="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>